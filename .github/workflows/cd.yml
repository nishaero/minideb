name: CD

# Controls when the action will run.
on:
  # Triggers the workflow on push on the master branch
  push:
    branches:
      - master
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    - cron:  '0 0 * * *'
# Remove all permissions by default
permissions: {}
env:
  BASENAME: nishaero/minideb
  LATEST: trixie
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  shellcheck:
    # The type of runner that the job will run on
    runs-on: ubuntu-24.04
    if: github.event_name != 'schedule' || github.repository == 'bitnami/minideb'
    name: Shellcheck
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Install Dependencies
        run: |
          sudo apt-get -qq update
          sudo apt-get install -y shellcheck
      - name: Verify scripts with shellcheck
        run: |
          bash shellcheck
  build_multiarch:
    runs-on: ubuntu-22.04
    needs: [ shellcheck ]
    strategy:
      matrix:
        dist: [bullseye, bookworm, trixie]
        arch: [amd64, arm64]
    name: Build ${{ matrix.dist }} on ${{ matrix.arch }}
    steps:
      - name: Check out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Use local build action
        id: build
        uses: ./.github/actions/build
        with:
          dist: "${{ matrix.dist }}"
          platform: "${{ matrix.arch }}"
          is_latest: ${{ matrix.dist == env.LATEST }}
      - name: Login to GHCR
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
      - name: Push to GHCR
        env:
          DOCKER_USERNAME: ${{ secrets.GHCR_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.GHCR_TOKEN }}
          DOCKER_REGISTRY: ghcr.io
        run: |
          bash pushone "${{ matrix.dist }}" "${{ matrix.arch }}"
          if [ "${{ matrix.dist }}" = "${{ env.LATEST }}" ]; then
            bash pushone "latest" "${{ matrix.arch }}"
          fi
  deploy_manifests:
    runs-on: ubuntu-24.04
    needs: [ build_multiarch ]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Login to GHCR
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
      - name: Push Manifests to GHCR
        env:
          DOCKER_USERNAME: ${{ secrets.GHCR_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.GHCR_TOKEN }}
          DOCKER_REGISTRY: ghcr.io
        run: |
          DISTS="bullseye bookworm latest" bash pushmanifest

